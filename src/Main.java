import Enam.Province;
import Enam.Type;
import Model.Address;
import Model.Announcements;
import Model.Booking;
import Model.User;
import Service.AnnouncementsService;
import Service.BookingService;
import Service.UserService;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        User user1 = new User("–ñ–∞–Ω–¥–∞—Ä","–¢–∞–∞–ª–∞–π–±–µ–∫–æ–≤","xp3335@gmail.com",
                LocalDate.of(2023,8,17));
        User user2 = new User("–ê–ª–∏","–ù–∞–º–∞—Ç–æ–≤","ali1998@gmail.com",
                LocalDate.of(2023,8,17));
        User user3 = new User("–§–∏—Ä—É–∑–∞","–ê–±—ã–ª–æ–≤–∞","firuzz11@gmail.com",
                LocalDate.of(2023,8,17));
        User user4 = new User("–ë–µ–∫—Å—É–ª—Ç–∞–Ω","–°–∞—Ç–∫—ã–Ω–±–µ–∫–æ–≤","beka2002@gmail.com",
                LocalDate.of(2023,8,17));
        User [] users = {user1,user2,user3,user4};

        Address address1 = new Address("–ö–≤–∞—Ä—Ç–∏—Ä–∞", Province.CHUY, "–ë–∏—à–∫–µ–∫", "–õ–µ–Ω–∏–Ω–∞, 123");
        Address address2 = new Address("–î–∞—á–∞", Province.CHUY, "–¢–æ–∫–º–æ–∫", "–°–∞–¥–æ–≤–∞—è, 7");
        Address address3 = new Address("–î–æ–º", Province.OSH, "–û—à", "–ü—É—à–∫–∏–Ω–∞, 50");
        Address address4 = new Address("–ö–æ—Ç—Ç–µ–¥–∂", Province.JALAL_ABAD, "–î–∂–∞–ª–∞–ª-–ê–±–∞–¥", "–°–æ—Å–Ω–æ–≤–∞—è, 15");
        Address address5 = new Address("–û—Ñ–∏—Å–Ω–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ", Province.CHUY, "–ë–∏—à–∫–µ–∫", "–ü—Ä. –ß—É–π, 200");

        
        Announcements announcements1 = new Announcements(
                "–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ", LocalDate.of(2023, 8, 25), "–ö–≤–∞—Ä—Ç–∏—Ä–∞",
                Type.APARTMENT, user1, false, 4, 500, address1);

        Announcements announcements2 = new Announcements(
                "–£—é—Ç–Ω–∞—è –¥–∞—á–∞ –Ω–∞ –±–µ—Ä–µ–≥—É", LocalDate.of(2023, 8, 26), "–î–∞—á–∞",
                Type.HOUSE, user2, true, 5, 700, address2);

        Announcements announcements3 = new Announcements(
                "–ö–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω—ã–π –¥–æ–º –≤ —Å—Ç–∞—Ä–æ–º –≥–æ—Ä–æ–¥–µ", LocalDate.of(2023, 8, 27), "–î–æ–º",
                Type.HOUSE, null, false, 6, 900, address3);

        Announcements announcements4 = new Announcements(
                "–ü—Ä–æ—Å—Ç–æ—Ä–Ω—ã–π –∫–æ—Ç—Ç–µ–¥–∂ —Å —Å–∞–¥–æ–º", LocalDate.of(2023, 8, 28), "–ö–æ—Ç—Ç–µ–¥–∂",
                Type.HOUSE, null, true, 7, 1200, address4);

        Announcements announcements5 = new Announcements(
                "–û—Ñ–∏—Å–Ω–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞", LocalDate.of(2023, 8, 29), "–û—Ñ–∏—Å",
                Type.APARTMENT, null, false, 8, 800, address5);

        Announcements[] announcements = {announcements1, announcements2, announcements3, announcements4};

        BookingService bookingService = new BookingService(users,announcements);
        AnnouncementsService announcementsService = new AnnouncementsService(announcements);
        UserService userService = new UserService(users,announcements);


//        announcementsService.createAnnouncement(announcements5);
//        announcementsService.deleteAnnouncementById(5); // –£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ ID
//        announcementsService.updateAnnouncementById(4, announcements5); // –û–±–Ω–æ–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ ID
//        System.out.println(announcementsService.getAnnouncementById(5)); // –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ ID
//        announcementsService.getAllAnnouncements(); // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
//        announcementsService.sortAnnouncementsByRating(); // –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
//        announcementsService.sortByPrice(); // –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ü–µ–Ω–µ
//        announcementsService.filterByType(Type.APARTMENT); // –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É (APARTMENT)
//        announcementsService.filterByType(Type.HOUSE); // –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É (HOUSE)
//        bookingService.bookingAnnouncement(1, 3); // –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
//        bookingService.unBookingAnnouncement(1, 3); // –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
//        userService.getAllUser(); // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
//        userService.getAnnouncementsByUserId(2); // –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//        userService.getAnnouncementsByAddress("–ü–µ—Ç—Ä–æ–≤–∏—á"); // –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—É "–ü–µ—Ç—Ä–æ–≤–∏—á"

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("üíÅ‚Äç‚ôÇÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:");
            System.out.println("1. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç!‚úÖ");
            System.out.println("2. –£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ ID‚õî");
            System.out.println("3. –û–±–Ω–æ–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ IDüîÑ");
            System.out.println("4. –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ IDüü¢");
            System.out.println("5. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã!üíÅ‚Äç‚ôÇÔ∏è");
            System.out.println("6. –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—Éüìâ");
            System.out.println("7. –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ü–µ–Ω–µüí∞");
            System.out.println("8. –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É (APARTMENT)üè¢");
            System.out.println("9. –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É (HOUSE)üè†");
            System.out.println("10. –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µüîí");
            System.out.println("11. –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µüîì");
            System.out.println("12. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüìù");
            System.out.println("13. –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüì©");
            System.out.println("14. –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—Éüì¨");
            System.out.println("15. –í—ã–π—Ç–∏‚úã");

            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    announcementsService.createAnnouncement(announcements5);
                    System.out.println("–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç!");
                    break;
                case 2:
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è:");
                    int deleteAnnouncementId = scanner.nextInt();
                    announcementsService.deleteAnnouncementById(deleteAnnouncementId);
                    break;
                case 3:
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:");
                    int updateAnnouncementId = scanner.nextInt();
                    System.out.println("–û–±–Ω–∞–≤–ª–µ–Ω–æ –Ω–∞ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç!");
                    announcementsService.updateAnnouncementById(updateAnnouncementId, announcements5);
                    break;
                case 4:
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è:");
                    int getAnnouncementId = scanner.nextInt();
                    System.out.println(announcementsService.getAnnouncementById(getAnnouncementId));
                    break;
                case 5:
                    System.out.println("–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è!");
                    announcementsService.getAllAnnouncements();
                    break;
                case 6:
                    System.out.println("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É!");
                    announcementsService.sortAnnouncementsByRating();
                    break;
                case 7:
                    System.out.println("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ü–µ–Ω–µ!");
                    announcementsService.sortByPrice();
                    break;
                case 8:
                    System.out.println("–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É (APARTMENT)");
                    announcementsService.filterByType(Type.APARTMENT);
                    break;
                case 9:
                    System.out.println("–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É (HOUSE)");
                    announcementsService.filterByType(Type.HOUSE);
                    break;
                case 10:
                    System.out.println("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ");
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
                    int bookingUserId = scanner.nextInt();
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è:");
                    int bookingAnnouncementId = scanner.nextInt();
                    bookingService.bookingAnnouncement(bookingUserId, bookingAnnouncementId);
                    break;
                case 11:
                    System.out.println("–û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ");
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
                    int cancelUserId = scanner.nextInt();
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è:");
                    int cancelAnnouncementId = scanner.nextInt();
                    bookingService.unBookingAnnouncement(cancelUserId, cancelAnnouncementId);
                    break;
                case 12:
                    System.out.println("–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!");
                    userService.getAllUser();
                    break;
                case 13:
                    System.out.println("–ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
                    int getAnnUser = scanner.nextInt();
                    userService.getAnnouncementsByUserId(getAnnUser);
                    break;
                case 14:
                    System.out.println("–ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—É");
                    String getAnnAddress = scanner.nextLine();
                    userService.getAnnouncementsByAddress(getAnnAddress);

                    break;
                case 15:
                    System.out.println("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!");
                    return;
                default:
                    System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞.");
            }
        }



    }
}